// Get a uniform random number for MDP transitions
            float rand = Random.value;

            // The following switch statement handles the MDP's state transition logic
            switch(state) {
                {%- for state in states %}
                case State.{{ state.name }}:
                {%- for t_name, transition in state.transitions.iteritems() %}
                    {%- if transition.norm and transition.neg %}
                    if( {{t_name}}() ) {
                        {%- for cdf, transition_state, probability in transition.norm %} 
                        // Probability of transition {{ probability * 100 }}%
                        {%- if loop.first %}
                        if( rand < {{cdf}} )
                        {%- else %}
                        else if( rand < {{cdf}} )
                        {%- endif %}
                            state = State.{{transition_state}};
                        {%- endfor %}
                    }
                    else {
                        {%- for cdf, transition_state, probability in transition.neg %} 
                        // Probability of transition {{ probability * 100 }}%
                        {%- if loop.first %}
                        if( rand < {{cdf}} )
                        {%- else %}
                        else if( rand < {{cdf}} )
                        {%- endif %}
                            state = State.{{transition_state}};
                        {%- endfor %}
                    }
                    {%- elif transition.norm %}
                    if( {{t_name}}() ) {
                        {%- for cdf, transition_state, probability in transition.norm %} 
                        // Probability of transition {{ probability * 100 }}%
                        {%- if loop.first %}
                        if( rand < {{cdf}} )
                        {%- else %}
                        else if( rand < {{cdf}} )
                        {%- endif %}
                            state = State.{{transition_state}};
                        {%- endfor %}
                    }
                    {%- elif transition.neg%}
                    if( !{{t_name}}() ) {
                        {%- for cdf, transition_state, probability in transition.neg %} 
                        // Probability of transition {{ probability * 100 }}%
                        {%- if loop.first %}
                        if( rand < {{cdf}} )
                        {%- else %}
                        else if( rand < {{cdf}} )
                        {%- endif %}
                            state = State.{{transition_state}};
                        {%- endfor %}
                    }
                    {%- endif %}
               {%- endfor %}
                    break;
            {%- endfor %}
            }